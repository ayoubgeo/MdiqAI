"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/page.tsx":
/*!**********************!*\
  !*** ./app/page.tsx ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _chat_module_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chat.module.css */ \"(app-pages-browser)/./app/chat.module.css\");\n/* harmony import */ var _chat_module_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_chat_module_css__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var openai_lib_AssistantStream__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! openai/lib/AssistantStream */ \"(app-pages-browser)/./node_modules/openai/lib/AssistantStream.mjs\");\n/* harmony import */ var react_markdown__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-markdown */ \"(app-pages-browser)/./node_modules/react-markdown/lib/index.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\nconst UserMessage = (param)=>{\n    let { text } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (_chat_module_css__WEBPACK_IMPORTED_MODULE_2___default().userMessage),\n        children: text\n    }, void 0, false, {\n        fileName: \"D:\\\\CARTOINWGS84\\\\python\\\\Mdiq\\\\app\\\\page.tsx\",\n        lineNumber: 14,\n        columnNumber: 10\n    }, undefined);\n};\n_c = UserMessage;\nconst AssistantMessage = (param)=>{\n    let { text } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (_chat_module_css__WEBPACK_IMPORTED_MODULE_2___default().assistantMessage),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_markdown__WEBPACK_IMPORTED_MODULE_3__.Markdown, {\n            children: text\n        }, void 0, false, {\n            fileName: \"D:\\\\CARTOINWGS84\\\\python\\\\Mdiq\\\\app\\\\page.tsx\",\n            lineNumber: 20,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"D:\\\\CARTOINWGS84\\\\python\\\\Mdiq\\\\app\\\\page.tsx\",\n        lineNumber: 19,\n        columnNumber: 5\n    }, undefined);\n};\n_c1 = AssistantMessage;\nconst CodeMessage = (param)=>{\n    let { text } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (_chat_module_css__WEBPACK_IMPORTED_MODULE_2___default().codeMessage),\n        children: text.split(\"\\n\").map((line, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        children: \"\".concat(index + 1, \". \")\n                    }, void 0, false, {\n                        fileName: \"D:\\\\CARTOINWGS84\\\\python\\\\Mdiq\\\\app\\\\page.tsx\",\n                        lineNumber: 30,\n                        columnNumber: 11\n                    }, undefined),\n                    line\n                ]\n            }, index, true, {\n                fileName: \"D:\\\\CARTOINWGS84\\\\python\\\\Mdiq\\\\app\\\\page.tsx\",\n                lineNumber: 29,\n                columnNumber: 9\n            }, undefined))\n    }, void 0, false, {\n        fileName: \"D:\\\\CARTOINWGS84\\\\python\\\\Mdiq\\\\app\\\\page.tsx\",\n        lineNumber: 27,\n        columnNumber: 5\n    }, undefined);\n};\n_c2 = CodeMessage;\nconst Message = (param)=>{\n    let { role, text } = param;\n    switch(role){\n        case \"user\":\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(UserMessage, {\n                text: text\n            }, void 0, false, {\n                fileName: \"D:\\\\CARTOINWGS84\\\\python\\\\Mdiq\\\\app\\\\page.tsx\",\n                lineNumber: 41,\n                columnNumber: 14\n            }, undefined);\n        case \"assistant\":\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AssistantMessage, {\n                text: text\n            }, void 0, false, {\n                fileName: \"D:\\\\CARTOINWGS84\\\\python\\\\Mdiq\\\\app\\\\page.tsx\",\n                lineNumber: 43,\n                columnNumber: 14\n            }, undefined);\n        case \"code\":\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CodeMessage, {\n                text: text\n            }, void 0, false, {\n                fileName: \"D:\\\\CARTOINWGS84\\\\python\\\\Mdiq\\\\app\\\\page.tsx\",\n                lineNumber: 45,\n                columnNumber: 14\n            }, undefined);\n        default:\n            return null;\n    }\n};\n_c3 = Message;\nconst Chat = (param)=>{\n    let { functionCallHandler = ()=>Promise.resolve(\"\") } = param;\n    _s();\n    const [userInput, setUserInput] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [inputDisabled, setInputDisabled] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [threadId, setThreadId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    // automatically scroll to bottom of chat\n    const messagesEndRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const scrollToBottom = ()=>{\n        var _messagesEndRef_current;\n        (_messagesEndRef_current = messagesEndRef.current) === null || _messagesEndRef_current === void 0 ? void 0 : _messagesEndRef_current.scrollIntoView({\n            behavior: \"smooth\"\n        });\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        scrollToBottom();\n    }, [\n        messages\n    ]);\n    // create a new threadID when chat component created\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const createThread = async ()=>{\n            const res = await fetch(\"/api/assistants/threads\", {\n                method: \"POST\"\n            });\n            const data = await res.json();\n            setThreadId(data.threadId);\n            console.log(\"New thread created with ID: \".concat(data.threadId));\n        };\n        createThread();\n    }, []);\n    const sendMessage = async (text)=>{\n        try {\n            const response = await fetch(\"/api/assistants/threads/\".concat(threadId, \"/messages\"), {\n                method: \"POST\",\n                body: JSON.stringify({\n                    content: text\n                })\n            });\n            const stream = openai_lib_AssistantStream__WEBPACK_IMPORTED_MODULE_4__.AssistantStream.fromReadableStream(response.body);\n            handleReadableStream(stream);\n        } catch (error) {\n            console.error(\"Error sending message:\", error);\n            setInputDisabled(false); // Re-enable input in case of error\n        }\n    };\n    const submitActionResult = async (runId, toolCallOutputs)=>{\n        const response = await fetch(\"/api/assistants/threads/\".concat(threadId, \"/actions\"), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                runId: runId,\n                toolCallOutputs: toolCallOutputs\n            })\n        });\n        const stream = openai_lib_AssistantStream__WEBPACK_IMPORTED_MODULE_4__.AssistantStream.fromReadableStream(response.body);\n        handleReadableStream(stream);\n    };\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        if (!userInput.trim()) return;\n        setMessages((prevMessages)=>[\n                ...prevMessages,\n                {\n                    role: \"user\",\n                    text: userInput\n                }\n            ]);\n        setUserInput(\"\");\n        scrollToBottom();\n        sendMessage(userInput).finally(()=>setInputDisabled(false));\n    };\n    /* Retry Function */ const retryOperation = async (operation, delay, retries)=>{\n        for(let i = 0; i < retries; i++){\n            try {\n                return await operation();\n            } catch (error) {\n                console.error(\"Attempt \".concat(i + 1, \" failed. Retrying in \").concat(delay, \"ms...\"), error);\n                if (i < retries - 1) {\n                    await new Promise((resolve)=>setTimeout(resolve, delay));\n                } else {\n                    throw error;\n                }\n            }\n        }\n    };\n    /* Stream Event Handlers */ // textCreated - create new assistant message\n    const handleTextCreated = ()=>{\n        appendMessage(\"assistant\", \"Analyzing...\");\n    };\n    // textDelta - append text to last assistant message\n    const handleTextDelta = (delta)=>{\n        console.log(\"Text delta received:\", delta);\n        if (delta.value != null) {\n            appendToLastMessage(delta.value);\n        }\n        if (delta.annotations != null) {\n            annotateLastMessage(delta.annotations);\n        }\n    };\n    // imageFileDone - show image in chat\n    const handleImageFileDone = (image)=>{\n        appendToLastMessage(\"\\n![\".concat(image.file_id, \"](/api/files/\").concat(image.file_id, \")\\n\"));\n    };\n    // toolCallCreated - log new tool call\n    const toolCallCreated = (toolCall)=>{\n        console.log(\"Tool call created:\", toolCall);\n        if (toolCall.type !== \"code_interpreter\") return;\n        appendMessage(\"code\", \"\");\n    };\n    // toolCallDelta - log delta and snapshot for the tool call\n    const toolCallDelta = (delta, snapshot)=>{\n        console.log(\"Tool call delta:\", delta, snapshot);\n        if (delta.type !== \"code_interpreter\") return;\n        if (!delta.code_interpreter.input) return;\n        appendToLastMessage(delta.code_interpreter.input);\n    };\n    // handleRequiresAction - handle function call\n    const handleRequiresAction = async (event // Use 'any' if you do not have the exact type for 'AssistantStreamEvent.ThreadRunRequiresAction'\n    )=>{\n        console.log(\"Requires action event:\", event);\n        const runId = event.data.id;\n        const toolCalls = event.data.required_action.submit_tool_outputs.tool_calls;\n        // loop over tool calls and call function handler\n        const toolCallOutputs = await Promise.all(toolCalls.map(async (toolCall)=>{\n            const result = await functionCallHandler(toolCall);\n            return {\n                output: result,\n                tool_call_id: toolCall.id\n            };\n        }));\n        setInputDisabled(true);\n        submitActionResult(runId, toolCallOutputs);\n    };\n    // handleRunCompleted - re-enable the input form\n    const handleRunCompleted = ()=>{\n        console.log(\"Run completed\");\n        setInputDisabled(false);\n    };\n    const handleReadableStream = (stream)=>{\n        let currentMessage = \"\";\n        let messageContainsCode = false;\n        // Append a new message immediately for analyzing\n        appendMessage(\"assistant\", \"Analyzing...\");\n        // textDelta - append text to last assistant message\n        stream.on(\"textDelta\", (delta)=>{\n            console.log(\"Stream textDelta:\", delta);\n            if (delta.value != null) {\n                currentMessage += delta.value;\n                appendToLastMessage(delta.value);\n                if (checkForCodeBlock(delta.value)) {\n                    messageContainsCode = true;\n                }\n            }\n            if (delta.annotations != null) {\n                annotateLastMessage(delta.annotations);\n            }\n        });\n        // imageFileDone - show image in chat\n        stream.on(\"imageFileDone\", (image)=>{\n            console.log(\"Stream imageFileDone:\", image);\n            currentMessage += \"\\n![\".concat(image.file_id, \"](/api/files/\").concat(image.file_id, \")\\n\");\n        });\n        // Handle the completion of the stream\n        stream.on(\"event\", (event)=>{\n            console.log(\"Stream event:\", event);\n            if (event.event === \"thread.run.completed\") {\n                if (messageContainsCode) {\n                    console.log(\"Message contains code block, displaying placeholder.\");\n                    // Replace placeholder with the actual result\n                    setTimeout(()=>{\n                        replaceLastMessage(\"assistant\", currentMessage);\n                    }, 2000); // Simulate a delay for processing\n                } else {\n                    replaceLastMessage(\"assistant\", currentMessage);\n                }\n            }\n        });\n        // Handle stream errors\n        stream.on(\"error\", async (err)=>{\n            console.error(\"Stream error:\", err);\n            appendToLastMessage(\"\\nAn error occurred while processing. Retrying...\\n\");\n            try {\n                await retryOperation(()=>handleReadableStream(stream), 2000, 3);\n            } catch (retryError) {\n                appendToLastMessage(\"\\nFailed to process after multiple attempts.\\n\");\n                setInputDisabled(false); // Re-enable input in case of error\n            }\n        });\n    };\n    // Utility function to check if a message contains a code block\n    const checkForCodeBlock = (text)=>{\n        const codeKeywords = [\n            \"function\",\n            \"const\",\n            \"let\",\n            \"import\",\n            \"export\",\n            \"class\",\n            \"return\",\n            \"if\",\n            \"else\",\n            \"for\",\n            \"while\"\n        ];\n        const lines = text.split(\"\\n\");\n        return lines.length > 3 || codeKeywords.some((keyword)=>text.includes(keyword));\n    };\n    /*\r\n    =======================\r\n    === Utility Helpers ===\r\n    =======================\r\n  */ const appendToLastMessage = (text)=>{\n        console.log(\"Appending to last message:\", text);\n        setMessages((prevMessages)=>{\n            const lastMessage = prevMessages[prevMessages.length - 1];\n            const updatedLastMessage = {\n                ...lastMessage,\n                text: lastMessage.text + text\n            };\n            return [\n                ...prevMessages.slice(0, -1),\n                updatedLastMessage\n            ];\n        });\n    };\n    const appendMessage = (role, text)=>{\n        console.log(\"Appending message:\", role, text);\n        setMessages((prevMessages)=>[\n                ...prevMessages,\n                {\n                    role,\n                    text\n                }\n            ]);\n    };\n    const replaceLastMessage = (role, text)=>{\n        console.log(\"Replacing last message:\", role, text);\n        setMessages((prevMessages)=>{\n            const updatedMessages = prevMessages.slice(0, -1);\n            updatedMessages.push({\n                role,\n                text\n            });\n            return updatedMessages;\n        });\n    };\n    const annotateLastMessage = (annotations)=>{\n        console.log(\"Annotating last message:\", annotations);\n        setMessages((prevMessages)=>{\n            const lastMessage = prevMessages[prevMessages.length - 1];\n            const updatedLastMessage = {\n                ...lastMessage\n            };\n            annotations.forEach((annotation)=>{\n                if (annotation.type === \"file_path\") {\n                    updatedLastMessage.text = updatedLastMessage.text.replaceAll(annotation.text, \"/api/files/\".concat(annotation.file_path.file_id));\n                }\n            });\n            return [\n                ...prevMessages.slice(0, -1),\n                updatedLastMessage\n            ];\n        });\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (_chat_module_css__WEBPACK_IMPORTED_MODULE_2___default().chatContainer),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: (_chat_module_css__WEBPACK_IMPORTED_MODULE_2___default().messages),\n                children: [\n                    messages.map((msg, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Message, {\n                            role: msg.role,\n                            text: msg.text\n                        }, index, false, {\n                            fileName: \"D:\\\\CARTOINWGS84\\\\python\\\\Mdiq\\\\app\\\\page.tsx\",\n                            lineNumber: 346,\n                            columnNumber: 11\n                        }, undefined)),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        ref: messagesEndRef\n                    }, void 0, false, {\n                        fileName: \"D:\\\\CARTOINWGS84\\\\python\\\\Mdiq\\\\app\\\\page.tsx\",\n                        lineNumber: 348,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\CARTOINWGS84\\\\python\\\\Mdiq\\\\app\\\\page.tsx\",\n                lineNumber: 344,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                onSubmit: handleSubmit,\n                className: \"\".concat((_chat_module_css__WEBPACK_IMPORTED_MODULE_2___default().inputForm), \" \").concat((_chat_module_css__WEBPACK_IMPORTED_MODULE_2___default().clearfix)),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        type: \"text\",\n                        className: (_chat_module_css__WEBPACK_IMPORTED_MODULE_2___default().input),\n                        value: userInput,\n                        onChange: (e)=>setUserInput(e.target.value.slice(0, 300)),\n                        placeholder: \"Enter your question (max 300 characters)\",\n                        disabled: inputDisabled\n                    }, void 0, false, {\n                        fileName: \"D:\\\\CARTOINWGS84\\\\python\\\\Mdiq\\\\app\\\\page.tsx\",\n                        lineNumber: 354,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        type: \"submit\",\n                        className: (_chat_module_css__WEBPACK_IMPORTED_MODULE_2___default().button),\n                        disabled: inputDisabled,\n                        children: \"Send\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\CARTOINWGS84\\\\python\\\\Mdiq\\\\app\\\\page.tsx\",\n                        lineNumber: 362,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\CARTOINWGS84\\\\python\\\\Mdiq\\\\app\\\\page.tsx\",\n                lineNumber: 350,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\CARTOINWGS84\\\\python\\\\Mdiq\\\\app\\\\page.tsx\",\n        lineNumber: 343,\n        columnNumber: 5\n    }, undefined);\n};\n_s(Chat, \"KGcbkxjkwhWQ3obYQGj/xQgz73I=\");\n_c4 = Chat;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Chat);\nvar _c, _c1, _c2, _c3, _c4;\n$RefreshReg$(_c, \"UserMessage\");\n$RefreshReg$(_c1, \"AssistantMessage\");\n$RefreshReg$(_c2, \"CodeMessage\");\n$RefreshReg$(_c3, \"Message\");\n$RefreshReg$(_c4, \"Chat\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/page.tsx\n"));

/***/ })

});